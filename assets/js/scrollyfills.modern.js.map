{"version":3,"file":"scrollyfills.modern.js","sources":["../src/scrollend.js"],"sourcesContent":["const supported = \"onscrollend\" in window\n\nif (!supported) {\n  const scrollendEvent = new Event('scrollend');\n  const pointers = new Set();\n\n  // Track if any pointer is active\n  document.addEventListener('touchstart', e => {\n    for (let touch of e.changedTouches) \n      pointers.add(touch.identifier)\n  }, {passive: true});\n\n  document.addEventListener('touchend', e => {\n    for (let touch of e.changedTouches)\n      pointers.delete(touch.identifier)\n  }, {passive: true});\n\n  // Map of scroll-observed elements.\n  let observed = new WeakMap();\n\n  // Forward and observe calls to a native method.\n  function observe(proto, method, handler) {\n    let native = proto[method];\n    proto[method] = function() {\n      let args = Array.prototype.slice.apply(arguments, [0]);\n      native.apply(this, args);\n      args.unshift(native);\n      handler.apply(this, args);\n    }\n  }\n  \n  function onAddListener(originalFn, type, handler, options) {\n    // Polyfill scrollend event on any element for which the developer listens\n    // to 'scrollend' explicitly or 'scroll' (so that adding a scrollend listener\n    // from within a scroll listener works).\n    if (type != 'scroll' && type != 'scrollend')\n      return;\n\n    let scrollport = this;\n    let data = observed.get(scrollport);\n    if (data === undefined) {\n      let timeout = 0;\n      data = {\n        scrollListener: (evt) => {\n          clearTimeout(timeout);\n          timeout = setTimeout(() => {\n            if (pointers.size) {\n              // if pointer(s) are down, wait longer\n              setTimeout(data.scrollListener, 100)\n            }\n            else {\n              // dispatch\n              scrollport.dispatchEvent(scrollendEvent);\n              timeout = 0;\n            }\n          }, 100);\n        },\n        listeners: 0, // Count of number of listeners.\n      };\n      originalFn.apply(scrollport, ['scroll', data.scrollListener]);\n      observed.set(scrollport, data);\n    }\n    data.listeners++;\n  }\n\n  function onRemoveListener(originalFn, type, handler) {\n    if (type != 'scroll' && type != 'scrollend')\n      return;\n    let scrollport = this;\n    let data = observed.get(scrollport);\n\n    // Mismatched addEventListener / removeEventListener\n    // TODO: Should we explicitly track added listeners to prevent this?\n    if (data === undefined)\n      return;\n\n    data[type]--;\n    // If there are still listeners, nothing more to do.\n    if (--data.listeners > 0)\n      return;\n\n    // Otherwise, remove the added listeners.\n    originalFn.apply(scrollport, ['scroll', data.scrollListener]);\n    observed.delete(scrollport);\n  }\n\n  observe(Element.prototype, 'addEventListener', onAddListener);\n  observe(window, 'addEventListener', onAddListener);\n  observe(document, 'addEventListener', onAddListener);\n  observe(Element.prototype, 'removeEventListener', onRemoveListener);\n  observe(window, 'removeEventListener', onRemoveListener);\n  observe(document, 'removeEventListener', onRemoveListener);\n  // TODO: Polyfill onscroll, onscrollend as well?\n}\n"],"names":["window","scrollendEvent","Event","pointers","Set","document","addEventListener","e","touch","changedTouches","add","identifier","passive","delete","observed","WeakMap","proto","method","handler","args","Array","prototype","slice","apply","arguments","native","this","unshift","originalFn","type","options","scrollport","data","get","undefined","timeout","scrollListener","evt","clearTimeout","setTimeout","size","dispatchEvent","listeners","set","observe","Element","onAddListener","onRemoveListener"],"mappings":"AAEA,KAFkB,gBAAiBA,QAEnB,CACd,MAAoBC,EAAG,IAAIC,MAAM,aACnBC,EAAG,IAAIC,IAGrBC,SAASC,iBAAiB,aAAcC,IACtC,IAAK,IAAIC,KAAUD,EAACE,eAClBN,EAASO,IAAIF,EAAMG,aACpB,CAACC,SAAS,IAEbP,SAASC,iBAAiB,WAAYC,IACpC,IAAK,IAALC,OAAoBC,eAClBN,EAASU,OAAOL,EAAMG,aACvB,CAACC,SAAS,IAGb,IAAYE,EAAG,IAAIC,QAGnB,WAAiBC,EAAOC,EAAQC,GAC9B,MAAaF,EAAMC,GACnBD,EAAMC,GAAU,WACd,IAAQE,EAAGC,MAAMC,UAAUC,MAAMC,MAAMC,UAAW,CAAC,IACnDC,EAAOF,MAAMG,KAAMP,GACnBA,EAAKQ,QAAQF,GACbP,EAAQK,MAAMG,KAAMP,IAIxB,WAAuBS,EAAYC,EAAMX,EAASY,GAIhD,GAAY,UAARD,GAA4B,aAARA,EACtB,OAEF,IAAcE,EAAGL,KACbM,EAAOlB,EAASmB,IAAIF,GACxB,QAAaG,IAATF,EAAoB,CACtB,IAAWG,EAAG,EACdH,EAAO,CACLI,eAAiBC,IACfC,aAAaH,GACbA,EAAUI,WAAW,KACfpC,EAASqC,KAEXD,WAAWP,EAAKI,eAAgB,MAIhCL,EAAWU,cAAcxC,GACzBkC,EAAU,IAEX,MAELO,UAAW,GAEbd,EAAWL,MAAMQ,EAAY,CAAC,SAAUC,EAAKI,iBAC7CtB,EAAS6B,IAAIZ,EAAYC,GAE3BA,EAAKU,YAGP,WAA0Bd,EAAYC,EAAMX,GAC1C,GAAY,UAARW,GAA4B,aAARA,EACtB,OACF,IAAcE,EAAGL,KACTM,EAAGlB,EAASmB,IAAIF,QAIXG,IAATF,IAGJA,EAAKH,OAECG,EAAKU,UAAY,IAIvBd,EAAWL,MAAMQ,EAAY,CAAC,SAAUC,EAAKI,iBAC7CtB,EAASD,OAAOkB,KAGlBa,EAAQC,QAAQxB,UAAW,mBAAoByB,GAC/CF,EAAQ5C,OAAQ,mBAAoB8C,GACpCF,EAAQvC,SAAU,mBAAoByC,GACtCF,EAAQC,QAAQxB,UAAW,sBAAuB0B,GAClDH,EAAQ5C,OAAQ,sBAAuB+C,GACvCH,EAAQvC,SAAU,sBAAuB0C"}